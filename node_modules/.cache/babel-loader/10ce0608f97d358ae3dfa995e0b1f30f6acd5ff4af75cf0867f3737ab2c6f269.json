{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Documents\\\\fullstack\\\\notas-app\\\\src\\\\components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = ({\n  notes\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const categories = ['personal', 'work', 'tasks', 'other'];\n    const categoryIcons = {\n      personal: 'icon-personal.png',\n      work: 'icon-work.png',\n      tasks: 'icon-tasks.png',\n      other: 'icon-other.png'\n    };\n    const categoryCounts = categories.map(category => notes.filter(note => note.category === category).length);\n    const colors = ['#8eb8e5', '#d3b8ae', '#6cbf6f', '#d6b8db'];\n    const images = categories.map(category => {\n      const img = new Image();\n      img.src = categoryIcons[category];\n      return img;\n    });\n    const data = {\n      labels: categories,\n      datasets: [{\n        data: categoryCounts,\n        backgroundColor: colors\n      }]\n    };\n    const myPieChart = new Chart(ctx, {\n      type: 'pie',\n      data: data,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true\n          }\n        }\n      },\n      plugins: [{\n        id: 'centerIcons',\n        beforeDraw: chart => {\n          const {\n            ctx,\n            chartArea: {\n              width,\n              height\n            }\n          } = chart;\n          const centerX = width / 2;\n          const centerY = height / 2;\n          const radius = chart.getDatasetMeta(0).data[0].outerRadius;\n          chart.data.datasets[0].data.forEach((value, index) => {\n            const angle = (chart.getDatasetMeta(0).data[index].startAngle + chart.getDatasetMeta(0).data[index].endAngle) / 2;\n            const x = centerX + radius / 2 * Math.cos(angle);\n            const y = centerY + radius / 2 * Math.sin(angle);\n            ctx.drawImage(images[index], x - 15, y - 15, 30, 30);\n          });\n        }\n      }]\n    });\n    return () => {\n      myPieChart.destroy();\n    };\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n_s(PieChart, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","jsxDEV","_jsxDEV","PieChart","notes","_s","canvasRef","ctx","current","getContext","categories","categoryIcons","personal","work","tasks","other","categoryCounts","map","category","filter","note","length","colors","images","img","Image","src","data","labels","datasets","backgroundColor","myPieChart","type","options","responsive","plugins","legend","display","id","beforeDraw","chart","chartArea","width","height","centerX","centerY","radius","getDatasetMeta","outerRadius","forEach","value","index","angle","startAngle","endAngle","x","Math","cos","y","sin","drawImage","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Documents/fullstack/notas-app/src/components/Chart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nconst PieChart = ({ notes }) => {\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const ctx = canvasRef.current.getContext('2d');\r\n\r\n        const categories = ['personal', 'work', 'tasks', 'other'];\r\n        const categoryIcons = {\r\n            personal: 'icon-personal.png',\r\n            work: 'icon-work.png',\r\n            tasks: 'icon-tasks.png',\r\n            other: 'icon-other.png',\r\n        };\r\n\r\n        const categoryCounts = categories.map(category => notes.filter(note => note.category === category).length);\r\n\r\n        const colors = ['#8eb8e5', '#d3b8ae', '#6cbf6f', '#d6b8db'];\r\n\r\n        const images = categories.map(category => {\r\n            const img = new Image();\r\n            img.src = categoryIcons[category];\r\n            return img;\r\n        });\r\n\r\n        const data = {\r\n            labels: categories,\r\n            datasets: [{\r\n                data: categoryCounts,\r\n                backgroundColor: colors,\r\n            }]\r\n        };\r\n\r\n        const myPieChart = new Chart(ctx, {\r\n            type: 'pie',\r\n            data: data,\r\n            options: {\r\n                responsive: true,\r\n                plugins: {\r\n                    legend: {\r\n                        display: true\r\n                    }\r\n                }\r\n            },\r\n            plugins: [{\r\n                id: 'centerIcons',\r\n                beforeDraw: (chart) => {\r\n                    const { ctx, chartArea: { width, height } } = chart;\r\n                    const centerX = width / 2;\r\n                    const centerY = height / 2;\r\n                    const radius = chart.getDatasetMeta(0).data[0].outerRadius;\r\n\r\n                    chart.data.datasets[0].data.forEach((value, index) => {\r\n                        const angle = (chart.getDatasetMeta(0).data[index].startAngle + chart.getDatasetMeta(0).data[index].endAngle) / 2;\r\n                        const x = centerX + (radius / 2) * Math.cos(angle);\r\n                        const y = centerY + (radius / 2) * Math.sin(angle);\r\n                        ctx.drawImage(images[index], x - 15, y - 15, 30, 30);\r\n                    });\r\n                }\r\n            }]\r\n        });\r\n\r\n        return () => {\r\n            myPieChart.destroy();\r\n        };\r\n    }, [notes]);\r\n\r\n    return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}