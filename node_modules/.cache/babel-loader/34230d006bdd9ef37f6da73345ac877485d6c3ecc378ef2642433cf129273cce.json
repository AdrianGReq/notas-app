{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Documents\\\\fullstack\\\\notas-app\\\\src\\\\components\\\\Chart.js\";\nimport React from 'react';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst categoryIcons = {\n  personal: 'icon-personal.png',\n  work: 'icon-work.png',\n  tasks: 'icon-tasks.png',\n  other: 'icon-other.png'\n};\nconst Chart = ({\n  notes\n}) => {\n  const categories = ['personal', 'work', 'tasks', 'other'];\n  const categoryColors = {\n    personal: '#8eb8e5',\n    work: '#d3b8ae',\n    tasks: '#6cbf6f',\n    other: '#d6b8db'\n  };\n  const categoryCounts = categories.map(category => notes.filter(note => note.category === category).length);\n  const barData = {\n    labels: categories,\n    datasets: [{\n      label: 'Número de Notas',\n      data: categoryCounts,\n      backgroundColor: Object.values(categoryColors)\n    }]\n  };\n  const pieData = {\n    labels: categories,\n    datasets: [{\n      data: categoryCounts,\n      backgroundColor: Object.values(categoryColors)\n    }]\n  };\n  const drawIcons = chart => {\n    const {\n      ctx,\n      chartArea: {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height\n      }\n    } = chart;\n    chart.data.labels.forEach((label, i) => {\n      const meta = chart.getDatasetMeta(0);\n      const {\n        x,\n        y\n      } = meta.data[i].tooltipPosition();\n      const image = new Image();\n      image.src = categoryIcons[label];\n      ctx.drawImage(image, x - 12, y - 12, 24, 24);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(Bar, {\n      data: barData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: pieData,\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        animation: {\n          onComplete: drawIcons\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Bar","Pie","Chart","ChartJS","ArcElement","BarElement","CategoryScale","LinearScale","Tooltip","Legend","jsxDEV","_jsxDEV","register","categoryIcons","personal","work","tasks","other","notes","categories","categoryColors","categoryCounts","map","category","filter","note","length","barData","labels","datasets","label","data","backgroundColor","Object","values","pieData","drawIcons","chart","ctx","chartArea","left","right","top","bottom","width","height","forEach","i","meta","getDatasetMeta","x","y","tooltipPosition","image","Image","src","drawImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","plugins","legend","display","tooltip","enabled","animation","onComplete","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Documents/fullstack/notas-app/src/components/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, BarElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n\r\nconst categoryIcons = {\r\n    personal: 'icon-personal.png',\r\n    work: 'icon-work.png',\r\n    tasks: 'icon-tasks.png',\r\n    other: 'icon-other.png',\r\n};\r\n\r\nconst Chart = ({ notes }) => {\r\n    const categories = ['personal', 'work', 'tasks', 'other'];\r\n    const categoryColors = {\r\n        personal: '#8eb8e5',\r\n        work: '#d3b8ae',\r\n        tasks: '#6cbf6f',\r\n        other: '#d6b8db',\r\n    };\r\n\r\n    const categoryCounts = categories.map(category => notes.filter(note => note.category === category).length);\r\n\r\n    const barData = {\r\n        labels: categories,\r\n        datasets: [{\r\n            label: 'Número de Notas',\r\n            data: categoryCounts,\r\n            backgroundColor: Object.values(categoryColors),\r\n        }]\r\n    };\r\n\r\n    const pieData = {\r\n        labels: categories,\r\n        datasets: [{\r\n            data: categoryCounts,\r\n            backgroundColor: Object.values(categoryColors),\r\n        }]\r\n    };\r\n\r\n    const drawIcons = (chart) => {\r\n        const { ctx, chartArea: { left, right, top, bottom, width, height } } = chart;\r\n\r\n        chart.data.labels.forEach((label, i) => {\r\n            const meta = chart.getDatasetMeta(0);\r\n            const { x, y } = meta.data[i].tooltipPosition();\r\n\r\n            const image = new Image();\r\n            image.src = categoryIcons[label];\r\n\r\n            ctx.drawImage(image, x - 12, y - 12, 24, 24);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <Bar data={barData} />\r\n            <Pie data={pieData} options={{ plugins: { legend: { display: false }, tooltip: { enabled: false } }, animation: { onComplete: drawIcons } }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}